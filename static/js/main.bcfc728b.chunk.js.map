{"version":3,"sources":["Image/index.js","utils/constants.js","Modal/index.js","Gallery.js","Header/index.js","Root.js","serviceWorker.js","index.js"],"names":["Image","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageRef","React","createRef","_this2","observer","observe","current","loadImage","window","setInterval","querySelector","classList","remove","clearInterval","unobserve","_this$props$photo","photo","id","src","url","name","user","react_default","a","createElement","Link","to","concat","className","ref","Component","API","Modal","fetchImage","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","state","fetch","sent","json","setState","stop","hide","event","preventDefault","setTimeout","close","modalRef","document","getElementById","focus","prevProps","prevState","ReactDOM","createPortal","href","onClick","aria-label","match","params","END","toggleGrow","entry","forEach","change","isIntersecting","target","add","Gallery","createImageObserver","IntersectionObserver","threshold","createScrollObserver","fetchMore","rootMargin","_ref","slicedToArray","intersectionRatio","getPhotos","page","photos","length","loading","toConsumableArray","t0","console","log","closeModal","history","push","selected","imgObserver","scrollObserver","gridRef","find","Number","disconnect","Fragment","map","src_Image_Image","key","Route","path","render","routerProps","src_Modal_Modal","assign","Header","Root","BrowserRouter","basename","process","src_Header","Switch","component","Boolean","location","hostname","src_Root","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iXAIqBA,qBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,SAAWC,IAAMC,YAFLT,mFAKC,IAAAU,EAAAP,KAClBA,KAAKJ,MAAMY,SAASC,QAAQT,KAAKI,SAASM,SAE1C,IAAMC,EAAYC,OAAOC,YAAY,WAC/BN,EAAKH,SAASM,UAChBH,EAAKH,SAASM,QACXI,cAAc,UACdC,UAAUC,OAAO,cACpBC,cAAcN,KAEf,oDAIHX,KAAKJ,MAAMY,SAASU,UAAUlB,KAAKI,SAASM,0CAGrC,IAAAS,EAKHnB,KAAKJ,MAAMwB,MAHbC,EAFKF,EAELE,GACKC,EAHAH,EAGLI,IACQC,EAJHL,EAILM,KAAQD,KAGV,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,WAAAC,OAAaV,GAAMW,UAAU,YACnCN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAAcC,IAAKjC,KAAKI,UACxCsB,EAAAC,EAAAC,cAAA,OAAKN,IAAKA,EAAKU,UAAU,qBACzBN,EAAAC,EAAAC,cAAA,cAAYI,UAAU,WAAtB,UACSN,EAAAC,EAAAC,cAAA,cAASJ,GAChBE,EAAAC,EAAAC,cAAA,KAAGI,UAAU,mBAAb,6KApCuB3B,IAAM6B,YCJ5BC,SAAM,0CCKEC,cACnB,SAAAA,EAAYxC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACjBvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,KAAMJ,KAqBRyC,WAtBmBvC,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAZ,EAAAa,KAsBN,SAAAC,IAAA,IAAApB,EAAAqB,EAAAtB,EAAA,OAAAmB,EAAAZ,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACHzB,EAAOxB,EAAKkD,MAAZ1B,IADG,CAAAuB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGcE,MAAK,GAAAjB,OAAII,EAAJ,YAAAJ,OAAkBV,IAHrC,cAGHqB,EAHGE,EAAAK,KAAAL,EAAAE,KAAA,EAIWJ,EAASQ,OAJpB,OAIH9B,EAJGwB,EAAAK,KAKTpD,EAAKsD,SAAS,CAAE/B,UALP,wBAAAwB,EAAAQ,SAAAX,EAAAzC,SAtBMH,EA+BnBwD,KAAO,SAAAC,GACLA,EAAMC,iBACN1D,EAAKsD,SAAS,CAAE/B,MAAO,MAAQ,iBAAM,CAACoC,WAAW3D,EAAKD,MAAM6D,MAAO,SA/BnE5D,EAAK6D,SAAWrD,IAAMC,YACtBT,EAAKkD,MAAQ,CAAE1B,GAAI,MAHFxB,mFAYjBG,KAAKqC,aACLsB,SAASC,eAAe,eAAeC,mDAGtBC,EAAWC,GACxB/D,KAAK+C,MAAM1B,KAAO0C,EAAU1C,IAC9BrB,KAAKqC,8CAkBA,IACCjB,EAAUpB,KAAK+C,MAAf3B,MAER,OAAO4C,IAASC,aACdvC,EAAAC,EAAAC,cAAA,WACEI,UAAS,SAAAD,OAAWX,EAAQ,OAAS,QACrCa,IAAKjC,KAAK0D,UAEVhC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAAA,KACEP,GAAG,cACH6C,KAAK,UACLC,QAASnE,KAAKqD,KACde,aAAW,QACXpC,UAAU,SALZ,KASCZ,GAASM,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAkBV,IAAG,GAAAS,OAAKX,EAAMG,SAG7DoC,SAASC,eAAe,kEAnDIhE,EAAOmD,GAErC,MAAO,CAAE1B,GADMzB,EAAMyE,MAAMC,OAAnBjD,WARuBhB,IAAM6B,WCCnCqC,EAAM,MAENC,EAAa,SAAAC,GACjBA,EAAMC,QAAQ,SAAAC,GACRA,EAAOC,eACTD,EAAOE,OAAO9D,UAAU+D,IAAI,QAE5BH,EAAOE,OAAO9D,UAAUC,OAAO,WAiGtB+D,cAnFb,SAAAA,EAAYnF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACjBlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,KAAMJ,KAkBRoF,oBAAsB,WAIpB,OAAO,IAAIC,qBAAqBT,EAHlB,CACZU,UAAW,CAAC,MArBGrF,EA0BnBsF,qBAAuB,WAErB,OAAO,IAAIF,qBAAqBpF,EAAKuF,UADrB,CAAEF,UAAW,CAAC,EAAG,GAAIG,WAAY,eA3BhCxF,EA+BnBuF,UAAY,SAAAE,GAAa,IAAXb,EAAW3E,OAAAyF,EAAA,EAAAzF,CAAAwF,EAAA,MACnBb,EAAMG,gBAA8C,IAA5BH,EAAMe,mBAChC3F,EAAK4F,aAjCU5F,EAqCnB4F,UArCmB3F,OAAAwC,EAAA,EAAAxC,CAAAyC,EAAAZ,EAAAa,KAqCP,SAAAC,IAAA,IAAAiD,EAAAhD,EAAAiD,EAAA,OAAApD,EAAAZ,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACJ4C,EAAoC,MAA7B7F,EAAKkD,MAAM4C,OAAOC,OAAiB/F,EAAKkD,MAAM2C,KAAOnB,KACrDA,EAFH,CAAA3B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAINhD,EAAKsD,SAAS,CAAE0C,SAAS,IAJnBjD,EAAAE,KAAA,EAKiBE,MAAK,GAAAjB,OAAII,EAAJ,kBAAAJ,OAAwB2D,EAAxB,eALtB,cAKAhD,EALAE,EAAAK,KAAAL,EAAAE,KAAA,EAMeJ,EAASQ,OANxB,OAMAyC,EANA/C,EAAAK,KAONpD,EAAKsD,SAAS,CACZwC,OAAM,GAAA5D,OAAAjC,OAAAgG,EAAA,EAAAhG,CAAMD,EAAKkD,MAAM4C,QAAjB7F,OAAAgG,EAAA,EAAAhG,CAA4B6F,IAClCD,KAAM7F,EAAKkD,MAAM2C,KAAO,EACxBG,SAAS,IAVLjD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAmD,GAAAnD,EAAA,SAaNoD,QAAQC,IAARrD,EAAAmD,IAbM,yBAAAnD,EAAAQ,SAAAX,EAAAzC,KAAA,aArCOH,EAuDnBqG,WAAa,WACXrG,EAAKD,MAAMuG,QAAQC,KAAK,YAtDxBvG,EAAKkD,MAAQ,CAAE4C,OAAQ,GAAIU,SAAU,KAAMX,KAAM,EAAGG,SAAS,GAC7DhG,EAAKyG,YAAczG,EAAKmF,sBACxBnF,EAAK0G,eAAiB1G,EAAKsF,uBAC3BtF,EAAK2G,QAAUnG,IAAMC,YALJT,6FARaD,EAAOmD,GAAO,IACpC1B,EAAOzB,EAAMyE,MAAMC,OAAnBjD,GAIR,MAAO,CAAEgF,SAHQhF,EACb0B,EAAM4C,OAAOc,KAAK,SAAArF,GAAK,OAAIA,EAAMC,KAAOqF,OAAOrF,KAC/C,2KAaJrB,KAAKuG,eAAe9F,QAAQT,KAAKwG,QAAQ9F,0JAIrCV,KAAKsG,cACPtG,KAAKsG,YAAYK,aACjB3G,KAAKuG,eAAeI,+CA4Cf,IAAApG,EAAAP,KACP,OACE0B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiF,SAAA,KACElF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACZhC,KAAK+C,MAAM4C,OAAOkB,IAAI,SAAAzF,GAAK,OAC1BM,EAAAC,EAAAC,cAACkF,EAAD,CAAO1F,MAAOA,EAAOZ,SAAUD,EAAK+F,YAAaS,IAAK3F,EAAMC,OAE7DrB,KAAK+C,MAAM8C,SAAWnE,EAAAC,EAAAC,cAAA,mCACvBF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,KAAK,cACLC,OAAQ,SAAAC,GAAW,OACjBzF,EAAAC,EAAAC,cAACwF,EAADtH,OAAAuH,OAAA,GAAWF,EAAX,CAAwB1D,MAAOlD,EAAK2F,kBAIZ,MAA7BlG,KAAK+C,MAAM4C,OAAOC,QACjBlE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAf,uBAEFN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,SAASC,IAAKjC,KAAKwG,kBAtFrBtE,aCPPoF,SARA,kBACb5F,EAAAC,EAAAC,cAAA,UAAQI,UAAU,cAChBN,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,4BCcSyF,EAdF,kBACX7F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,CAAeC,SAAUC,yBACvBhG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAC+F,EAAD,MACAjG,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACElG,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,KAAK,UAAUY,UAAW9C,IACjCrD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,KAAK,IAAIY,UAAW9C,SCDjB+C,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAAS3D,MACvB,2DCZNL,IAASkD,OAAOxF,EAAAC,EAAAC,cAACqG,EAAD,MAAUtE,SAASC,eAAe,SD2H5C,kBAAmBsE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.bcfc728b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Image.css';\n\nexport default class Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.observer.observe(this.imageRef.current);\n\n    const loadImage = window.setInterval(() => {\n      if (this.imageRef.current) {\n        this.imageRef.current\n          .querySelector('.photo')\n          .classList.remove('hide-image');\n        clearInterval(loadImage);\n      }\n    }, 100);\n  }\n\n  componentWillUnmount() {\n    this.props.observer.unobserve(this.imageRef.current);\n  }\n\n  render() {\n    const {\n      id,\n      url: src,\n      user: { name }\n    } = this.props.photo;\n\n    return (\n      <Link to={`/photos/${id}`} className=\"img-link\">\n        <figure className=\"img-wrapper\" ref={this.imageRef}>\n          <img src={src} className=\"photo hide-image\" />\n          <figcaption className=\"caption\">\n            owner: <strong>{name}</strong>\n            <p className=\"img-description\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce\n              facilisis fringilla laoreet. Mauris mattis enim ut felis\n              consectetur, vitae lacinia enim auctor.\n            </p>\n          </figcaption>\n        </figure>\n      </Link>\n    );\n  }\n}\n","export const API = 'https://unsplash-rip-api.herokuapp.com';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\nimport { API } from '../utils/constants';\n\nexport default class Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.modalRef = React.createRef();\n    this.state = { id: null };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const { id } = props.match.params;\n    return { id };\n  }\n\n  componentDidMount() {\n    this.fetchImage();\n    document.getElementById('close-modal').focus();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.id !== prevState.id) {\n      this.fetchImage();\n    }\n  }\n\n  fetchImage = async () => {\n    const { id } = this.state;\n    if (id) {\n      const response = await fetch(`${API}/photos/${id}`);\n      const photo = await response.json();\n      this.setState({ photo });\n    }\n  };\n\n  hide = event => {\n    event.preventDefault();\n    this.setState({ photo: null }, () => [setTimeout(this.props.close, 500)]);\n  };\n\n  render() {\n    const { photo } = this.state;\n\n    return ReactDOM.createPortal(\n      <section\n        className={`modal ${photo ? 'show' : 'hide'}`}\n        ref={this.modalRef}\n      >\n        <div className=\"modal-content\">\n          <a\n            id=\"close-modal\"\n            href=\"/photos\"\n            onClick={this.hide}\n            aria-label=\"close\"\n            className=\"close\"\n          >\n            X\n          </a>\n          {photo && <img className=\"photo modal-img\" src={`${photo.url}`} />}\n        </div>\n      </section>,\n      document.getElementById('modal-root')\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Image from './Image';\nimport Modal from './Modal';\nimport { API } from './utils/constants';\n\nconst END = 'end';\n\nconst toggleGrow = entry => {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('grow');\n    } else {\n      change.target.classList.remove('grow');\n    }\n  });\n};\n\nclass Gallery extends Component {\n  static getDerivedStateFromProps(props, state) {\n    const { id } = props.match.params;\n    const selected = id\n      ? state.photos.find(photo => photo.id === Number(id))\n      : null;\n    return { selected };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { photos: [], selected: null, page: 1, loading: false };\n    this.imgObserver = this.createImageObserver();\n    this.scrollObserver = this.createScrollObserver();\n    this.gridRef = React.createRef();\n  }\n\n  async componentDidMount() {\n    this.scrollObserver.observe(this.gridRef.current);\n  }\n\n  componentWillUnmount() {\n    if (this.imgObserver) {\n      this.imgObserver.disconnect();\n      this.scrollObserver.disconnect();\n    }\n  }\n\n  createImageObserver = () => {\n    let options = {\n      threshold: [0]\n    };\n    return new IntersectionObserver(toggleGrow, options);\n  };\n\n  createScrollObserver = () => {\n    const options = { threshold: [0, 1], rootMargin: '300px 0px' };\n    return new IntersectionObserver(this.fetchMore, options);\n  };\n\n  fetchMore = ([entry]) => {\n    if (entry.isIntersecting && entry.intersectionRatio === 1) {\n      this.getPhotos();\n    }\n  };\n\n  getPhotos = async () => {\n    const page = this.state.photos.length !== 100 ? this.state.page : END;\n    if (page !== END) {\n      try {\n        this.setState({ loading: true });\n        const response = await fetch(`${API}/photos?_page=${page}&_limit=20`);\n        const photos = await response.json();\n        this.setState({\n          photos: [...this.state.photos, ...photos],\n          page: this.state.page + 1,\n          loading: false\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  closeModal = () => {\n    this.props.history.push('/photos');\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"grid\">\n          {this.state.photos.map(photo => (\n            <Image photo={photo} observer={this.imgObserver} key={photo.id} />\n          ))}\n          {this.state.loading && <h3> L O A D I N G . . . </h3>}\n          <Route\n            path=\"/photos/:id\"\n            render={routerProps => (\n              <Modal {...routerProps} close={this.closeModal} />\n            )}\n          />\n        </div>\n        {this.state.photos.length === 100 && (\n          <div className=\"bottom\"> That's all folks. </div>\n        )}\n        <span className=\"bottom\" ref={this.gridRef} />\n      </>\n    );\n  }\n}\n\nexport default Gallery;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <header className=\"App-header\">\n    <h2>\n      <Link to=\"/\">Intersection Gallery</Link>\n    </h2>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Gallery from './Gallery';\nimport './Gallery.css';\nimport Header from './Header';\n\nconst Root = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Switch>\n          <Route path=\"/photos\" component={Gallery} />\n          <Route path=\"/\" component={Gallery} />\n        </Switch>\n      </main>\n    </div>\n  </BrowserRouter>\n);\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}